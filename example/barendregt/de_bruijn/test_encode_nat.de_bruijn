// nat_t = ((A) -> A) -> (A) -> A

let zero: ((A) -> A) -> (A) -> A = {
  (f: (A) -> A) => f
}

let succ: (((A) -> A) -> (A) -> A) -> ((A) -> A) -> (A) -> A = {
  (n: ((A) -> A) -> (A) -> A) => (f: (A) -> A) => n(f)
}
